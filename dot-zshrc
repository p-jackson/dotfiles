# ENVIRONMENT SETUP

# Commands can be edited with vim keys
set -o vi

# Share history between sessions
setopt SHARE_HISTORY

export VISUAL=nvim
export EDITOR=nvim
export XDG_CONFIG_HOME=$HOME/.config

# Setup Homebrew's environment variables
if [ "$(arch)" = "arm64" ]; then
  eval "$(/opt/homebrew/bin/brew shellenv zsh)"
else
	eval "$(/usr/local/bin/brew shellenv zsh)"
fi

export REPO_PATH="$HOME/dev"
export NOTES_PATH="$HOME/Library/Mobile Documents/iCloud~md~obsidian/Documents/notes"


# PATH

# For personal scripts
export PATH=$PATH:$HOME/bin

# For scripts private-bin not stored in this repo
if [[ -d "$HOME/private-bin" ]]; then
  export PATH=$HOME/private-bin:$PATH
fi

# Ensures that composer users the config from the current repo
export PATH=./vendor/bin:$PATH

# Rust toolchain (the traditional rustup install method does this automatically, but we're using Homebrew)
if [[ -d "$(brew --prefix rustup)/bin" ]]; then
  export PATH=$(brew --prefix rustup)/bin:$PATH
fi
export PATH=$HOME/.cargo/bin:$PATH

# Scripts installed by pipx
export PATH=$PATH:$HOME/.local/bin


# PROMPT (starship)

eval "$(starship init zsh)"


# ALIASES

alias ls='ls --color=auto'
alias la='ls -hAl'

alias v=nvim

alias lg="lazygit"
git config --global alias.lg 'log --graph --oneline --decorate --color --all'

# Repos
alias dev="cd $REPO_PATH"
alias cal="cd $REPO_PATH/wp-calypso"
alias dot="cd $REPO_PATH/dotfiles"
alias studio="cd $REPO_PATH/local-environment"

# Notes
alias zk="cd \$NOTES_PATH" # Nav to notes directory
alias zn="create-new-note" # Create new note, script is in ~/bin folder
alias zr="cd \$NOTES_PATH && nvim -p \$NOTES_PATH/0-inbox/*.md" # Review notes in inbox


# COMPLETIONS

autoload -Uz compinit
compinit

# Install brew completions
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH
fi

# fzf keybindings and completion
source <(fzf --zsh)

# rustup completions
if type rustup &>/dev/null; then
	source <(rustup completions zsh)
fi

# hostctl completions
if type hostctl &>/dev/null; then
	source <(hostctl completion zsh)
fi

# nvm bash_completion
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"


# MISC SETUP

# nvm
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# Calypso dev performance
export NODE_OPTIONS=--max-old-space-size=24576
export CHROMEDRIVER_SKIP_DOWNLOAD=true
export PUPPETEER_SKIP_DOWNLOAD=true
export PLAYWRIGHT_SKIP_DOWNLOAD=true

# Calypso e2e test environment
export NODE_CONFIG_ENV=development

# Yarn
export PATH=$PATH:$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin

# pnpm
export PNPM_HOME="/Users/philip/Library/pnpm"
export PATH=$PATH:$PNPM_HOME
# pnpm end

# deno
export DENO_INSTALL="$HOME/.deno"
export PATH=$PATH:$DENO_INSTALL/bin

# Python with no version suffix
export PATH="$PATH:$(brew --prefix python)/libexec/bin"


# Herd injected PHP binary.
export PATH=$PATH:"/Users/philip/Library/Application Support/Herd/bin/"


# Herd injected PHP 8.2 configuration.
export HERD_PHP_82_INI_SCAN_DIR="/Users/philip/Library/Application Support/Herd/config/php/82/"


# Herd injected PHP 8.3 configuration.
export HERD_PHP_83_INI_SCAN_DIR="/Users/philip/Library/Application Support/Herd/config/php/83/"


# Herd injected PHP 8.1 configuration.
export HERD_PHP_81_INI_SCAN_DIR="/Users/philip/Library/Application Support/Herd/config/php/81/"


# Herd injected PHP 7.4 configuration.
export HERD_PHP_74_INI_SCAN_DIR="/Users/philip/Library/Application Support/Herd/config/php/74/"


# Herd injected PHP 8.0 configuration.
export HERD_PHP_80_INI_SCAN_DIR="/Users/philip/Library/Application Support/Herd/config/php/80/"
