unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set-option -g status-keys "emacs"

bright_foreground="#D6DEEB"
dim_foreground="#637777"

set -g status-position top
set -g status-fg "${dim_foreground}"
set -g status-bg "default"
set -g status-left "#[fg=${bright_foreground}] #S  #[fg=${dim_foreground}]| "
set -g status-right " #(tmux-cpu.sh)  #(tmux-mem.sh)"
set -g status-interval 2
set -g window-status-current-format "#[fg=${bright_foreground}]#I:#W"
set -g window-status-format " #I:#W"
set -g pane-border-style "fg=${dim_foreground}"
set -g pane-active-border-style "fg=${bright_foreground}"

set -g status-left-length 50

# Use Ctrl + N to switch window (just a little more efficient than bind-key N)
bind-key -n C-1 select-window -t1
bind-key -n C-2 select-window -t2
bind-key -n C-3 select-window -t3
bind-key -n C-4 select-window -t4
bind-key -n C-5 select-window -t5
bind-key -n C-6 select-window -t6

bind-key - split-window -v -c '#{pane_current_path}'
bind-key \\ split-window -h -c '#{pane_current_path}'

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c '#{pane_current_path}'

set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of 'Enter' to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Fuzzy matching session navigation via fzf utility
bind C-j display-popup -T 'Switch to Session' -w 45 -h 12 -E "\
	tmux list-sessions -F '#S' |\
	grep -v \"^$(tmux display-message -p '#S')\$\" |\
	fzf --reverse |\
	xargs tmux switch-client -t"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

set -g mouse on
set -g set-clipboard on

# Reduce timeout after the escape key is pressed
set -sg escape-time 10

# Enable focus-events because this allows nvim to reload files which
# were changed outside of nvim.
set-option -g focus-events on

